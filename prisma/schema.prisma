// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// NextAuth.js Models
model Account {
  id                String  @id @map("_id") @default(auto()) @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  access_token      String? @db.String
  expires_at        Int?    @db.Int
  token_type        String? @db.String
  scope             String? @db.String
  id_token          String? @db.String
  session_state     String? @db.String

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @map("_id") @default(auto()) @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime

  @@map("sessions")
}

model User {
  id            String    @id @map("_id") @default(auto()) @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  @@map("users")
}

model VerificationToken {
  id         String   @id @map("_id") @default(auto()) @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

// Budgeting App Models (senza relazioni per ora)
model Category {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  color     String   @default("#22C55E")
  icon      String?
  type      String   // "income" or "expense"
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Transaction {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  amount      Float
  description String
  date        DateTime
  type        String   // "income" or "expense"
  categoryId  String   @db.ObjectId
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("transactions")
}

model Budget {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  amount     Float
  spent      Float    @default(0)
  period     String   // "monthly", "weekly", "yearly"
  startDate  DateTime
  endDate    DateTime
  categoryId String   @db.ObjectId
  userId     String   @db.ObjectId
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("budgets")
}
